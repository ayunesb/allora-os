import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Gauge, Shield, Globe, BarChart3, Database, Activity, Zap, } from "lucide-react";
import { Progress } from "@/components/ui/progress";
import { logger } from "@/utils/loggingService";
export default function TechnicalImprovements() {
    const [activeTab, setActiveTab] = useState("performance");
    const [loadingOptimization, setLoadingOptimization] = useState(false);
    const [securityScanRunning, setSecurityScanRunning] = useState(false);
    const [apiTestRunning, setApiTestRunning] = useState(false);
    const [analyzingData, setAnalyzingData] = useState(false);
    const [currentProgress, setCurrentProgress] = useState(0);
    // Performance metrics
    const performanceMetrics = {
        pageLoad: 1.8, // seconds
        timeToInteractive: 2.4, // seconds
        memoryUsage: 58, // MB
        apiResponseTime: 380, // ms
        renderTime: 120, // ms
    };
    // Security metrics
    const securityMetrics = {
        vulnerabilities: 2,
        securityScore: 86,
        daysToLastAudit: 31,
        totalIssues: 5,
        criticalIssues: 0,
    };
    // API metrics
    const apiMetrics = {
        endpoints: 28,
        averageResponseTime: 210, // ms
        successRate: 99.2, // percentage
        totalRequests: 12450,
        webhookIntegrations: 4,
    };
    // Sentiment analysis data
    const sentimentData = {
        positivePercentage: 72,
        negativePercentage: 18,
        neutralPercentage: 10,
        averageSentiment: 7.8,
        totalAnalyzed: 1238,
    };
    const handleOptimizeNow = () => {
        setLoadingOptimization(true);
        setCurrentProgress(0);
        // Log this action
        logger.info("Performance optimization started", {
            component: "TechnicalImprovements",
        });
        // Simulate progress with a timer
        const interval = setInterval(() => {
            setCurrentProgress((prev) => {
                if (prev >= 100) {
                    clearInterval(interval);
                    setLoadingOptimization(false);
                    return 100;
                }
                return prev + 10;
            });
        }, 500);
    };
    const runSecurityScan = () => {
        setSecurityScanRunning(true);
        setCurrentProgress(0);
        logger.info("Security scan initiated", {
            component: "TechnicalImprovements",
        });
        const interval = setInterval(() => {
            setCurrentProgress((prev) => {
                if (prev >= 100) {
                    clearInterval(interval);
                    setSecurityScanRunning(false);
                    return 100;
                }
                return prev + 5;
            });
        }, 300);
    };
    const testApiEndpoints = () => {
        setApiTestRunning(true);
        setCurrentProgress(0);
        logger.info("API endpoint testing started", {
            component: "TechnicalImprovements",
        });
        const interval = setInterval(() => {
            setCurrentProgress((prev) => {
                if (prev >= 100) {
                    clearInterval(interval);
                    setApiTestRunning(false);
                    return 100;
                }
                return prev + 8;
            });
        }, 400);
    };
    const analyzeSentiment = () => {
        setAnalyzingData(true);
        setCurrentProgress(0);
        logger.info("Sentiment analysis started", {
            component: "TechnicalImprovements",
        });
        const interval = setInterval(() => {
            setCurrentProgress((prev) => {
                if (prev >= 100) {
                    clearInterval(interval);
                    setAnalyzingData(false);
                    return 100;
                }
                return prev + 4;
            });
        }, 250);
    };
    return (_jsx("div", { className: "container mx-auto p-4 pt-20", children: _jsxs("div", { className: "flex flex-col space-y-4", children: [_jsx("h1", { className: "text-3xl font-bold", children: "Performance and Technical Improvements" }), _jsx("p", { className: "text-muted-foreground", children: "Tools and features to optimize your application performance, security, and integrations." }), _jsxs(Tabs, { defaultValue: "performance", value: activeTab, onValueChange: setActiveTab, className: "w-full", children: [_jsxs(TabsList, { className: "grid grid-cols-5 w-full", children: [_jsxs(TabsTrigger, { value: "performance", className: "flex items-center gap-2", children: [_jsx(Zap, { className: "h-4 w-4" }), _jsx("span", { className: "hidden sm:inline", children: "Performance" })] }), _jsxs(TabsTrigger, { value: "security", className: "flex items-center gap-2", children: [_jsx(Shield, { className: "h-4 w-4" }), _jsx("span", { className: "hidden sm:inline", children: "Security" })] }), _jsxs(TabsTrigger, { value: "api", className: "flex items-center gap-2", children: [_jsx(Globe, { className: "h-4 w-4" }), _jsx("span", { className: "hidden sm:inline", children: "API" })] }), _jsxs(TabsTrigger, { value: "sentiment", className: "flex items-center gap-2", children: [_jsx(BarChart3, { className: "h-4 w-4" }), _jsx("span", { className: "hidden sm:inline", children: "Sentiment" })] }), _jsxs(TabsTrigger, { value: "knowledge", className: "flex items-center gap-2", children: [_jsx(Database, { className: "h-4 w-4" }), _jsx("span", { className: "hidden sm:inline", children: "Knowledge" })] })] }), _jsxs(TabsContent, { value: "performance", className: "space-y-4 mt-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(Gauge, { className: "h-5 w-5 mr-2 text-blue-500" }), "Page Load Speed"] }), _jsx(CardDescription, { children: "Current average load time" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-3xl font-bold text-blue-600", children: [performanceMetrics.pageLoad, "s"] }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: "Target: < 1.5s" }), _jsx(Progress, { value: Math.min(100, (1.5 / performanceMetrics.pageLoad) * 100), className: "h-2 mt-2" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(Activity, { className: "h-5 w-5 mr-2 text-green-500" }), "Time to Interactive"] }), _jsx(CardDescription, { children: "User interaction readiness" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-3xl font-bold text-green-600", children: [performanceMetrics.timeToInteractive, "s"] }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: "Target: < 2.0s" }), _jsx(Progress, { value: Math.min(100, (2.0 / performanceMetrics.timeToInteractive) * 100), className: "h-2 mt-2" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(Zap, { className: "h-5 w-5 mr-2 text-amber-500" }), "API Response Time"] }), _jsx(CardDescription, { children: "Average server response" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-3xl font-bold text-amber-600", children: [performanceMetrics.apiResponseTime, "ms"] }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: "Target: < 300ms" }), _jsx(Progress, { value: Math.min(100, (300 / performanceMetrics.apiResponseTime) * 100), className: "h-2 mt-2" })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Performance Optimization" }), _jsx(CardDescription, { children: "Run automatic optimizations to improve application performance" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "JavaScript Bundle Size" }), _jsx("span", { className: "font-medium", children: "1.2MB" })] }), _jsx(Progress, { value: 65, className: "h-2" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Image Optimization" }), _jsx("span", { className: "font-medium", children: "42 images" })] }), _jsx(Progress, { value: 78, className: "h-2" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Database Query Performance" }), _jsx("span", { className: "font-medium", children: "24 queries" })] }), _jsx(Progress, { value: 92, className: "h-2" })] }), loadingOptimization ? (_jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Optimization in progress..." }), _jsxs("span", { className: "font-medium", children: [currentProgress, "%"] })] }), _jsx(Progress, { value: currentProgress, className: "h-2" })] })) : (_jsx(Button, { onClick: handleOptimizeNow, className: "w-full", children: "Optimize Now" }))] })] })] }), _jsxs(TabsContent, { value: "security", className: "space-y-4 mt-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(Shield, { className: "h-5 w-5 mr-2 text-red-500" }), "Security Score"] }), _jsx(CardDescription, { children: "Overall security rating" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-3xl font-bold text-red-600", children: [securityMetrics.securityScore, "/100"] }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: "Target: > 90" }), _jsx(Progress, { value: securityMetrics.securityScore, className: "h-2 mt-2" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(Shield, { className: "h-5 w-5 mr-2 text-orange-500" }), "Vulnerabilities"] }), _jsx(CardDescription, { children: "Detected issues" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-3xl font-bold text-orange-600", children: securityMetrics.vulnerabilities }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: "Target: 0" }), _jsx(Progress, { value: Math.max(0, 100 - securityMetrics.vulnerabilities * 25), className: "h-2 mt-2" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(Shield, { className: "h-5 w-5 mr-2 text-blue-500" }), "Last Security Audit"] }), _jsx(CardDescription, { children: "Days since last audit" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-3xl font-bold text-blue-600", children: [securityMetrics.daysToLastAudit, " days"] }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: "Target: < 30 days" }), _jsx(Progress, { value: Math.max(0, 100 - securityMetrics.daysToLastAudit * 3), className: "h-2 mt-2" })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Enhanced Security Features" }), _jsx(CardDescription, { children: "Configure additional security measures for your application" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "Two-Factor Authentication (2FA)" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "Enable 2FA" }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "Single Sign-On (SSO)" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "Configure SSO" }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "API Key Security" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "Manage API Keys" }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "Security Policy" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "Update Policy" }) })] })] }), securityScanRunning ? (_jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Security scan in progress..." }), _jsxs("span", { className: "font-medium", children: [currentProgress, "%"] })] }), _jsx(Progress, { value: currentProgress, className: "h-2" })] })) : (_jsx(Button, { onClick: runSecurityScan, className: "w-full", children: "Run Security Scan" }))] })] })] }), _jsxs(TabsContent, { value: "api", className: "space-y-4 mt-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(Globe, { className: "h-5 w-5 mr-2 text-purple-500" }), "Total Endpoints"] }), _jsx(CardDescription, { children: "Available API resources" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-3xl font-bold text-purple-600", children: apiMetrics.endpoints }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: apiMetrics.endpoints > 20
                                                                ? "Extensive API coverage"
                                                                : "Basic API coverage" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(Globe, { className: "h-5 w-5 mr-2 text-indigo-500" }), "Success Rate"] }), _jsx(CardDescription, { children: "API call success percentage" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-3xl font-bold text-indigo-600", children: [apiMetrics.successRate, "%"] }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: "Target: > 99.5%" }), _jsx(Progress, { value: apiMetrics.successRate, className: "h-2 mt-2" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(Globe, { className: "h-5 w-5 mr-2 text-cyan-500" }), "Webhook Integrations"] }), _jsx(CardDescription, { children: "Connected external services" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-3xl font-bold text-cyan-600", children: apiMetrics.webhookIntegrations }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: apiMetrics.webhookIntegrations > 0
                                                                ? "Active integrations"
                                                                : "No integrations" })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "API Expansion" }), _jsx(CardDescription, { children: "Extend your API capabilities for third-party integrations" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "API Documentation" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "View Docs" }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "New Endpoint" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "Create Endpoint" }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "Webhooks" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "Manage Webhooks" }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "Usage Metrics" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "View Metrics" }) })] })] }), apiTestRunning ? (_jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "API testing in progress..." }), _jsxs("span", { className: "font-medium", children: [currentProgress, "%"] })] }), _jsx(Progress, { value: currentProgress, className: "h-2" })] })) : (_jsx(Button, { onClick: testApiEndpoints, className: "w-full", children: "Test API Endpoints" }))] })] })] }), _jsxs(TabsContent, { value: "sentiment", className: "space-y-4 mt-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(BarChart3, { className: "h-5 w-5 mr-2 text-green-500" }), "Positive Sentiment"] }), _jsx(CardDescription, { children: "Customer positive feedback" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-3xl font-bold text-green-600", children: [sentimentData.positivePercentage, "%"] }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: "Target: > 75%" }), _jsx(Progress, { value: sentimentData.positivePercentage, className: "h-2 mt-2" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(BarChart3, { className: "h-5 w-5 mr-2 text-red-500" }), "Negative Sentiment"] }), _jsx(CardDescription, { children: "Customer negative feedback" })] }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-3xl font-bold text-red-600", children: [sentimentData.negativePercentage, "%"] }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: "Target: < 15%" }), _jsx(Progress, { value: 100 - sentimentData.negativePercentage, className: "h-2 mt-2" })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(BarChart3, { className: "h-5 w-5 mr-2 text-blue-500" }), "Average Sentiment"] }), _jsx(CardDescription, { children: "Overall satisfaction score (0-10)" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-3xl font-bold text-blue-600", children: sentimentData.averageSentiment }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: "Target: > 8.0" }), _jsx(Progress, { value: (sentimentData.averageSentiment / 10) * 100, className: "h-2 mt-2" })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Sentiment Analysis" }), _jsx(CardDescription, { children: "Analyze customer feedback and communication sentiment" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "Communication Analysis" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "Analyze Communications" }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "Feedback Analysis" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "Analyze Feedback" }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "Sentiment Reports" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "View Reports" }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsx(CardTitle, { className: "text-sm", children: "Topic Detection" }) }), _jsx(CardContent, { children: _jsx(Button, { variant: "outline", className: "w-full", children: "Detect Topics" }) })] })] }), analyzingData ? (_jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Sentiment analysis in progress..." }), _jsxs("span", { className: "font-medium", children: [currentProgress, "%"] })] }), _jsx(Progress, { value: currentProgress, className: "h-2" })] })) : (_jsx(Button, { onClick: analyzeSentiment, className: "w-full", children: "Run Sentiment Analysis" }))] })] })] }), _jsxs(TabsContent, { value: "knowledge", className: "space-y-4 mt-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Technology" }), _jsx(CardDescription, { children: "Specialized knowledge for technology companies" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Knowledge Base Completion" }), _jsx("span", { children: "87%" })] }), _jsx(Progress, { value: 87, className: "h-2" }), _jsx(Button, { variant: "outline", className: "w-full mt-4", children: "Access Knowledge Base" })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Healthcare" }), _jsx(CardDescription, { children: "Specialized knowledge for healthcare organizations" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Knowledge Base Completion" }), _jsx("span", { children: "92%" })] }), _jsx(Progress, { value: 92, className: "h-2" }), _jsx(Button, { variant: "outline", className: "w-full mt-4", children: "Access Knowledge Base" })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Finance" }), _jsx(CardDescription, { children: "Specialized knowledge for financial services" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Knowledge Base Completion" }), _jsx("span", { children: "94%" })] }), _jsx(Progress, { value: 94, className: "h-2" }), _jsx(Button, { variant: "outline", className: "w-full mt-4", children: "Access Knowledge Base" })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Retail" }), _jsx(CardDescription, { children: "Specialized knowledge for retail businesses" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Knowledge Base Completion" }), _jsx("span", { children: "82%" })] }), _jsx(Progress, { value: 82, className: "h-2" }), _jsx(Button, { variant: "outline", className: "w-full mt-4", children: "Access Knowledge Base" })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Manufacturing" }), _jsx(CardDescription, { children: "Specialized knowledge for manufacturing industries" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Knowledge Base Completion" }), _jsx("span", { children: "78%" })] }), _jsx(Progress, { value: 78, className: "h-2" }), _jsx(Button, { variant: "outline", className: "w-full mt-4", children: "Access Knowledge Base" })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Education" }), _jsx(CardDescription, { children: "Specialized knowledge for educational institutions" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Knowledge Base Completion" }), _jsx("span", { children: "81%" })] }), _jsx(Progress, { value: 81, className: "h-2" }), _jsx(Button, { variant: "outline", className: "w-full mt-4", children: "Access Knowledge Base" })] }) })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Knowledge Base Development" }), _jsx(CardDescription, { children: "Request specialized knowledge development for your industry" })] }), _jsx(CardContent, { children: _jsx(Button, { className: "w-full", children: "Request Industry Knowledge Base" }) })] })] })] })] }) }));
}
