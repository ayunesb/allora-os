import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { Clock, Server, CheckCircle, AlertTriangle, XCircle, } from "lucide-react";
import { getStatusIcon } from "../utils/statusUtils";
export default function OverviewTab({ services }) {
    const calculateHealthPercentage = () => {
        if (services.length === 0)
            return 0;
        const healthyServices = services.filter((s) => s.status === "healthy").length;
        const degradedServices = services.filter((s) => s.status === "degraded").length;
        return Math.round(((healthyServices + degradedServices * 0.5) / services.length) * 100);
    };
    const healthPercentage = calculateHealthPercentage();
    const getServicesByStatus = (status) => {
        return services.filter((service) => service.status === status);
    };
    const healthyServices = getServicesByStatus("healthy");
    const degradedServices = getServicesByStatus("degraded");
    const downServices = getServicesByStatus("down");
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsx(CardTitle, { children: "System Health Overview" }), _jsx(CardDescription, { children: "Overall system performance and health metrics" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "flex flex-col gap-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsxs("span", { children: ["System Health: ", healthPercentage, "%"] }), _jsxs("span", { children: [healthyServices.length, "/", services.length, " Services Operational"] })] }), _jsx(Progress, { value: healthPercentage, className: "h-2" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4 mt-4", children: [_jsx(Card, { className: "bg-green-50 border-green-200", children: _jsxs(CardContent, { className: "p-4 flex justify-between items-center", children: [_jsxs("div", { children: [_jsx("div", { className: "text-sm font-medium text-green-700", children: "Healthy" }), _jsx("div", { className: "text-2xl font-bold text-green-800", children: healthyServices.length })] }), _jsx(CheckCircle, { className: "h-8 w-8 text-green-500" })] }) }), _jsx(Card, { className: "bg-amber-50 border-amber-200", children: _jsxs(CardContent, { className: "p-4 flex justify-between items-center", children: [_jsxs("div", { children: [_jsx("div", { className: "text-sm font-medium text-amber-700", children: "Degraded" }), _jsx("div", { className: "text-2xl font-bold text-amber-800", children: degradedServices.length })] }), _jsx(AlertTriangle, { className: "h-8 w-8 text-amber-500" })] }) }), _jsx(Card, { className: "bg-red-50 border-red-200", children: _jsxs(CardContent, { className: "p-4 flex justify-between items-center", children: [_jsxs("div", { children: [_jsx("div", { className: "text-sm font-medium text-red-700", children: "Down" }), _jsx("div", { className: "text-2xl font-bold text-red-800", children: downServices.length })] }), _jsx(XCircle, { className: "h-8 w-8 text-red-500" })] }) })] })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsx(CardTitle, { children: "Recent Activity" }), _jsx(CardDescription, { children: "Recent system events and status changes" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [services.slice(0, 3).map((service) => (_jsxs("div", { className: "flex items-start space-x-3 border-b pb-3 last:border-0 last:pb-0", children: [_jsx("div", { className: "mt-0.5", children: getStatusIcon(service.status) }), _jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "font-medium", children: service.name }), _jsxs("div", { className: "flex items-center text-sm text-muted-foreground", children: [_jsx(Clock, { className: "h-3 w-3 mr-1" }), _jsx("span", { children: new Date(service.lastChecked).toLocaleTimeString() })] })] }), _jsx("p", { className: "text-sm text-muted-foreground", children: service.details })] })] }, service.id))), services.length === 0 && (_jsxs("div", { className: "text-center py-6 text-muted-foreground", children: [_jsx(Server, { className: "h-10 w-10 mx-auto mb-2 opacity-30" }), _jsx("p", { children: "No recent activity to display" })] }))] }) })] })] }));
}
