import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardHeader, CardTitle, CardDescription, } from "@/components/ui/card";
import { TypographyH1, TypographyP } from "@/components/ui/typography";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Plus, ArrowRight, Webhook, Link } from "lucide-react";
export default function AdminWebhooks() {
    return (_jsxs("div", { className: "container mx-auto px-4 py-6 space-y-6", children: [_jsxs("div", { className: "flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4", children: [_jsx(TypographyH1, { children: "Webhook Management" }), _jsxs(Button, { className: "w-full sm:w-auto", children: [_jsx(Plus, { className: "h-4 w-4 mr-2" }), "Add Webhook"] })] }), _jsxs(Tabs, { defaultValue: "active", className: "w-full", children: [_jsxs(TabsList, { className: "w-full max-w-md mb-4", children: [_jsx(TabsTrigger, { value: "active", className: "flex-1", children: "Active Webhooks" }), _jsx(TabsTrigger, { value: "logs", className: "flex-1", children: "History" }), _jsx(TabsTrigger, { value: "settings", className: "flex-1", children: "Settings" })] }), _jsx(TabsContent, { value: "active", children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-3", children: [_jsxs(CardTitle, { className: "flex items-center", children: [_jsx(Webhook, { className: "h-5 w-5 mr-2 text-primary" }), "System Events"] }), _jsx(CardDescription, { children: "Webhook URLs for system-level events" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "user-events", children: "User Events" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Input, { id: "user-events", placeholder: "https://your-server.com/webhooks/users" }), _jsx(Button, { variant: "outline", size: "sm", children: "Test" })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "system-events", children: "System Events" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Input, { id: "system-events", placeholder: "https://your-server.com/webhooks/system" }), _jsx(Button, { variant: "outline", size: "sm", children: "Test" })] })] })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "pb-3", children: [_jsxs(CardTitle, { className: "flex items-center", children: [_jsx(Link, { className: "h-5 w-5 mr-2 text-primary" }), "Integration Webhooks"] }), _jsx(CardDescription, { children: "Connect third-party services" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs(Button, { variant: "outline", className: "w-full justify-between", children: ["Connect to Zapier", _jsx(ArrowRight, { className: "h-4 w-4 ml-2" })] }), _jsxs(Button, { variant: "outline", className: "w-full justify-between", children: ["Connect to Slack", _jsx(ArrowRight, { className: "h-4 w-4 ml-2" })] })] }) })] })] }) }), _jsx(TabsContent, { value: "logs", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Webhook History" }), _jsx(CardDescription, { children: "Recent webhook events and their delivery status" })] }), _jsx(CardContent, { children: _jsx(TypographyP, { children: "No webhook events recorded yet. They will appear here once activity begins." }) })] }) }), _jsx(TabsContent, { value: "settings", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Webhook Settings" }), _jsx(CardDescription, { children: "Configure your webhook handling preferences" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx(Label, { htmlFor: "retry-attempts", children: "Retry Attempts" }), _jsx("div", { className: "flex items-center space-x-2", children: _jsx(Input, { id: "retry-attempts", type: "number", defaultValue: 3, className: "w-20" }) })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx(Label, { htmlFor: "timeout", children: "Request Timeout (ms)" }), _jsx("div", { className: "flex items-center space-x-2", children: _jsx(Input, { id: "timeout", type: "number", defaultValue: 3000, className: "w-20" }) })] }), _jsx(Button, { className: "mt-4", children: "Save Settings" })] }) })] }) })] })] }));
}
