import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Database, ServerCrash, Shield, RefreshCw, ArrowRightLeft, } from "lucide-react";
import { useNavigate } from "react-router-dom";
export default function ProductionDataPage() {
    const navigate = useNavigate();
    const [isProductionMode, setIsProductionMode] = React.useState(false);
    const toggleProductionMode = () => {
        if (!isProductionMode) {
            if (window.confirm("Are you sure you want to switch to production mode? This will affect live data.")) {
                setIsProductionMode(true);
            }
        }
        else {
            setIsProductionMode(false);
        }
    };
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-6", children: [_jsx("h2", { className: "text-3xl font-bold tracking-tight", children: "Production Data Management" }), _jsxs("div", { className: "flex gap-2", children: [_jsxs(Button, { variant: "outline", size: "sm", className: "gap-2", onClick: () => window.location.reload(), children: [_jsx(RefreshCw, { className: "h-4 w-4" }), "Refresh"] }), _jsxs(Button, { variant: isProductionMode ? "destructive" : "default", size: "sm", className: "gap-2", onClick: toggleProductionMode, children: [_jsx(ArrowRightLeft, { className: "h-4 w-4" }), isProductionMode
                                        ? "Switch to Development"
                                        : "Switch to Production"] })] })] }), _jsxs("div", { className: "bg-muted/30 rounded-lg p-4 mb-6 flex items-center", children: [_jsx("div", { className: "mr-4", children: _jsx(Badge, { variant: isProductionMode ? "destructive" : "default", className: "px-3 py-1", children: isProductionMode ? "PRODUCTION MODE" : "DEVELOPMENT MODE" }) }), _jsx("div", { className: "text-sm", children: isProductionMode
                            ? "You are currently modifying production data. All changes will affect the live system."
                            : "You are in development mode. Changes won't affect the production system." })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-6", children: [_jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "flex items-center text-base", children: [_jsx(Database, { className: "mr-2 h-5 w-5 text-primary" }), "Database Status"] }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-sm", children: [_jsxs("div", { className: "flex justify-between mb-2", children: [_jsx("span", { children: "Connection:" }), _jsx(Badge, { variant: "outline", className: "bg-green-50 text-green-700 border-green-200", children: "Connected" })] }), _jsxs("div", { className: "flex justify-between mb-2", children: [_jsx("span", { children: "Tables:" }), _jsx("span", { className: "font-medium", children: "32" })] }), _jsxs("div", { className: "flex justify-between mb-2", children: [_jsx("span", { children: "RLS Policies:" }), _jsx("span", { className: "font-medium", children: "12" })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Functions:" }), _jsx("span", { className: "font-medium", children: "8" })] })] }), _jsx(Button, { variant: "outline", size: "sm", className: "w-full mt-4", onClick: () => navigate("/admin/entities"), children: "Manage Database" })] })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "flex items-center text-base", children: [_jsx(ServerCrash, { className: "mr-2 h-5 w-5 text-primary" }), "API Services"] }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-sm", children: [_jsxs("div", { className: "flex justify-between mb-2", children: [_jsx("span", { children: "Status:" }), _jsx(Badge, { variant: "outline", className: "bg-green-50 text-green-700 border-green-200", children: "Operational" })] }), _jsxs("div", { className: "flex justify-between mb-2", children: [_jsx("span", { children: "Edge Functions:" }), _jsx("span", { className: "font-medium", children: "5" })] }), _jsxs("div", { className: "flex justify-between mb-2", children: [_jsx("span", { children: "Webhooks:" }), _jsx("span", { className: "font-medium", children: "3" })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Response Time:" }), _jsx("span", { className: "font-medium", children: "124ms" })] })] }), _jsx(Button, { variant: "outline", size: "sm", className: "w-full mt-4", onClick: () => navigate("/admin/webhooks"), children: "Manage Services" })] })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "flex items-center text-base", children: [_jsx(Shield, { className: "mr-2 h-5 w-5 text-primary" }), "Security Status"] }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "text-sm", children: [_jsxs("div", { className: "flex justify-between mb-2", children: [_jsx("span", { children: "Status:" }), _jsx(Badge, { variant: "outline", className: "bg-green-50 text-green-700 border-green-200", children: "Secure" })] }), _jsxs("div", { className: "flex justify-between mb-2", children: [_jsx("span", { children: "API Keys:" }), _jsx("span", { className: "font-medium", children: "4" })] }), _jsxs("div", { className: "flex justify-between mb-2", children: [_jsx("span", { children: "Auth Providers:" }), _jsx("span", { className: "font-medium", children: "3" })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { children: "Last Audit:" }), _jsx("span", { className: "font-medium", children: "2 days ago" })] })] }), _jsx(Button, { variant: "outline", size: "sm", className: "w-full mt-4", onClick: () => navigate("/admin/audit"), children: "Run Security Audit" })] })] })] })] }));
}
