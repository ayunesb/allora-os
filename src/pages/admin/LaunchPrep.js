import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, } from "@/components/ui/card";
import { RunAuditButton } from "@/components/admin/RunAuditButton";
import { usePreLaunchValidation } from "@/hooks/usePreLaunchValidation";
import { Button } from "@/components/ui/button";
import { AlertTriangle, CheckCircle, Rocket } from "lucide-react";
export default function LaunchPrep() {
    const { isValidating, validationResult, runValidation } = usePreLaunchValidation();
    const error = null; // Add an error placeholder to match the expected structure
    return (_jsxs("div", { className: "space-y-6 animate-in fade-in duration-500", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold tracking-tight", children: "Launch Preparation" }), _jsx("p", { className: "text-muted-foreground mt-2", children: "Ensure your system is ready for production deployment" })] }), _jsx(RunAuditButton, {})] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Rocket, { className: "h-5 w-5 text-primary" }), "Pre-Launch Validation"] }), _jsx(CardDescription, { children: "Run automated checks to validate production readiness" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsx(Button, { onClick: runValidation, disabled: isValidating, className: "w-full sm:w-auto", children: isValidating
                                        ? "Running Validation..."
                                        : "Run Production Readiness Check" }), error && (_jsx("div", { className: "mt-4 p-4 bg-destructive/10 border border-destructive/20 rounded-md text-destructive", children: _jsxs("div", { className: "flex items-start gap-2", children: [_jsx(AlertTriangle, { className: "h-5 w-5 mt-0.5" }), _jsxs("div", { children: [_jsx("p", { className: "font-semibold", children: "Validation Error" }), _jsx("p", { className: "text-sm mt-1", children: error })] })] }) })), validationResult && (_jsxs("div", { className: "mt-4 border rounded-md divide-y", children: [_jsx("div", { className: "p-4 bg-muted/30", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("h3", { className: "font-medium", children: ["System Readiness:", " ", validationResult.ready ? "Ready" : "Not Ready"] }), validationResult.ready ? (_jsxs("span", { className: "bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs font-medium flex items-center gap-1", children: [_jsx(CheckCircle, { className: "h-3 w-3" }), " Ready"] })) : (_jsxs("span", { className: "bg-amber-100 text-amber-800 px-2 py-1 rounded-full text-xs font-medium flex items-center gap-1", children: [_jsx(AlertTriangle, { className: "h-3 w-3" }), " Issues Found"] }))] }) }), validationResult.issues.length > 0 && (_jsxs("div", { className: "p-4", children: [_jsxs("h4", { className: "font-medium mb-2 text-destructive flex items-center gap-1", children: [_jsx(AlertTriangle, { className: "h-4 w-4" }), " Issues to Resolve"] }), _jsx("ul", { className: "space-y-2", children: validationResult.issues.map((issue, index) => (_jsxs("li", { className: "bg-destructive/10 border border-destructive/20 p-3 rounded-md text-sm", children: [_jsx("p", { className: "font-medium", children: issue.message }), issue.details && (_jsx("div", { className: "mt-1 text-muted-foreground", children: _jsx("pre", { className: "text-xs overflow-auto p-2 bg-background mt-1 rounded border", children: JSON.stringify(issue.details, null, 2) }) }))] }, index))) })] })), validationResult.passedChecks.length > 0 && (_jsxs("div", { className: "p-4", children: [_jsxs("h4", { className: "font-medium mb-2 text-green-600 flex items-center gap-1", children: [_jsx(CheckCircle, { className: "h-4 w-4" }), " Passed Checks"] }), _jsx("ul", { className: "space-y-2", children: validationResult.passedChecks.map((check, index) => (_jsx("li", { className: "bg-green-50 border border-green-200 p-3 rounded-md text-sm text-green-800", children: check.message }, index))) })] }))] }))] }) })] })] }));
}
