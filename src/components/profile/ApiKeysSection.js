import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Key, Eye, EyeOff } from "lucide-react";
import APIKeyInput from "@/components/admin/APIKeyInput";
const ApiKeysSection = ({ personalApiKeys, handleApiKeyChange }) => {
    const [showApiSection, setShowApiSection] = useState(false);
    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("h3", { className: "text-lg font-medium flex items-center gap-2", children: [_jsx(Key, { className: "h-5 w-5" }), "Personal API Keys"] }), _jsxs(Button, { type: "button", variant: "outline", size: "sm", onClick: () => setShowApiSection(!showApiSection), children: [showApiSection ? (_jsxs(_Fragment, { children: [_jsx(EyeOff, { className: "h-4 w-4 mr-2" }), "Hide"] })) : (_jsxs(_Fragment, { children: [_jsx(Eye, { className: "h-4 w-4 mr-2" }), "Show"] })), " ", "API Keys"] })] }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Add your personal API keys to use instead of company-wide keys. These keys will override company keys for your account only." }), showApiSection && (_jsxs("div", { className: "space-y-4 p-4 border rounded-md bg-muted/30", children: [_jsx(APIKeyInput, { id: "stripe-key", label: "Stripe API Key", value: personalApiKeys.stripe, onChange: (value) => handleApiKeyChange("stripe", value), placeholder: "Enter your Stripe API key" }), _jsx(APIKeyInput, { id: "twilio-sid", label: "Twilio SID", value: personalApiKeys.twilio_sid, onChange: (value) => handleApiKeyChange("twilio_sid", value), placeholder: "Enter your Twilio SID" }), _jsx(APIKeyInput, { id: "twilio-token", label: "Twilio Auth Token", value: personalApiKeys.twilio_token, onChange: (value) => handleApiKeyChange("twilio_token", value), placeholder: "Enter your Twilio auth token" }), _jsx(APIKeyInput, { id: "heygen-key", label: "HeyGen API Key", value: personalApiKeys.heygen, onChange: (value) => handleApiKeyChange("heygen", value), placeholder: "Enter your HeyGen API key" }), _jsx("p", { className: "text-xs text-muted-foreground mt-2", children: "These keys are stored securely and used only for your account." })] }))] }));
};
export default ApiKeysSection;
