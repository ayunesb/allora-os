import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { User, AtSign, Building, Briefcase, Phone, MapPin, Globe, Calendar, } from "lucide-react";
const PersonalInfoForm = ({ register, errors, userCreatedAt }) => {
    return (_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Personal Information" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "name", className: "flex items-center gap-2", children: [_jsx(User, { className: "h-4 w-4" }), "Full Name"] }), _jsx(Input, Object.assign({ id: "name", placeholder: "Your full name" }, register("name", { required: "Name is required" }), { className: errors.name ? "border-destructive" : "" })), errors.name && (_jsx("p", { className: "text-sm text-destructive", children: errors.name.message }))] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "email", className: "flex items-center gap-2", children: [_jsx(AtSign, { className: "h-4 w-4" }), "Email Address"] }), _jsx(Input, Object.assign({ id: "email", type: "email", placeholder: "Your email address", disabled: true }, register("email"))), _jsx("p", { className: "text-xs text-muted-foreground", children: "Email cannot be changed" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "company", className: "flex items-center gap-2", children: [_jsx(Building, { className: "h-4 w-4" }), "Company"] }), _jsx(Input, Object.assign({ id: "company", placeholder: "Your company name" }, register("company")))] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "role", className: "flex items-center gap-2", children: [_jsx(Briefcase, { className: "h-4 w-4" }), "Job Title"] }), _jsx(Input, Object.assign({ id: "role", placeholder: "Your job title" }, register("role")))] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "phone", className: "flex items-center gap-2", children: [_jsx(Phone, { className: "h-4 w-4" }), "Phone Number"] }), _jsx(Input, Object.assign({ id: "phone", placeholder: "Your phone number" }, register("phone")))] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "location", className: "flex items-center gap-2", children: [_jsx(MapPin, { className: "h-4 w-4" }), "Location"] }), _jsx(Input, Object.assign({ id: "location", placeholder: "City, Country" }, register("location")))] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "website", className: "flex items-center gap-2", children: [_jsx(Globe, { className: "h-4 w-4" }), "Website"] }), _jsx(Input, Object.assign({ id: "website", placeholder: "https://example.com" }, register("website")))] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "joinDate", className: "flex items-center gap-2", children: [_jsx(Calendar, { className: "h-4 w-4" }), "Joined"] }), _jsx(Input, { id: "joinDate", value: userCreatedAt
                                    ? new Date(userCreatedAt).toLocaleDateString()
                                    : "N/A", disabled: true })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "bio", className: "flex items-center gap-2", children: [_jsx(User, { className: "h-4 w-4" }), "Bio"] }), _jsx(Textarea, Object.assign({ id: "bio", placeholder: "Tell us a bit about yourself" }, register("bio"), { rows: 4 })), _jsx("p", { className: "text-xs text-muted-foreground", children: "This will be displayed on your public profile" })] })] }));
};
export default PersonalInfoForm;
