import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from "@/components/ui/select";
export function DecisionFilters({ executiveFilter, setExecutiveFilter, priorityFilter, setPriorityFilter, riskFilter, setRiskFilter, searchQuery, setSearchQuery, }) {
    return (_jsxs("div", { className: "flex flex-wrap gap-4 mb-8", children: [_jsx(Input, { type: "text", placeholder: "Search by task or decision...", value: searchQuery, onChange: (e) => setSearchQuery(e.target.value), className: "max-w-sm" }), _jsx(Input, { type: "text", placeholder: "Filter by Executive...", value: executiveFilter, onChange: (e) => setExecutiveFilter(e.target.value), className: "max-w-sm" }), _jsxs(Select, { value: priorityFilter, onValueChange: setPriorityFilter, children: [_jsx(SelectTrigger, { className: "w-[180px]", children: _jsx(SelectValue, { placeholder: "All Priorities" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "", children: "All Priorities" }), _jsx(SelectItem, { value: "high", children: "High" }), _jsx(SelectItem, { value: "medium", children: "Medium" }), _jsx(SelectItem, { value: "low", children: "Low" })] })] }), _jsxs(Select, { value: riskFilter, onValueChange: setRiskFilter, children: [_jsx(SelectTrigger, { className: "w-[180px]", children: _jsx(SelectValue, { placeholder: "All Risks" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "", children: "All Risks" }), [1, 2, 3, 4, 5].map((score) => (_jsx(SelectItem, { value: score.toString(), children: score.toString() }, score)))] })] })] }));
}
