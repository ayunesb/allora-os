import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { AccordionContent, AccordionItem, AccordionTrigger, } from "@/components/ui/accordion";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Plus, X, ArrowRight } from "lucide-react";
export function GrowthTraction({ companyDetails, handleTextChange, newItem, setNewItem, addToArray, removeFromArray, onNext, }) {
    return (_jsxs(AccordionItem, { value: "growth", children: [_jsx(AccordionTrigger, { className: "text-base font-medium", children: "Growth & Traction" }), _jsxs(AccordionContent, { className: "space-y-4 pt-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Current Revenue" }), _jsx(Input, { placeholder: "Monthly Revenue / Annual Recurring Revenue (MRR/ARR)", value: companyDetails.revenue || "", onChange: (e) => handleTextChange("revenue", e.target.value) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "User Metrics" }), _jsx(Input, { placeholder: "Number of users/customers? Growth rate?", value: companyDetails.userMetrics || "", onChange: (e) => handleTextChange("userMetrics", e.target.value) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Funding" }), _jsx(Input, { placeholder: "Have you raised any funds? Seed, Series A?", value: companyDetails.funding || "", onChange: (e) => handleTextChange("funding", e.target.value) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Strategic Partnerships" }), _jsxs("div", { className: "flex gap-2", children: [_jsx(Input, { placeholder: "Add a partnership", value: newItem.partnerships || "", onChange: (e) => setNewItem(Object.assign(Object.assign({}, newItem), { partnerships: e.target.value })) }), _jsx(Button, { type: "button", size: "icon", onClick: () => addToArray("partnerships"), children: _jsx(Plus, { className: "h-4 w-4" }) })] }), _jsx("div", { className: "flex flex-wrap gap-2 mt-2", children: (companyDetails.partnerships || []).map((partnership, index) => (_jsxs("div", { className: "flex items-center bg-secondary text-secondary-foreground px-3 py-1 rounded-full text-sm", children: [partnership, _jsx("button", { onClick: () => removeFromArray("partnerships", index), className: "ml-2 text-muted-foreground hover:text-foreground", children: _jsx(X, { className: "h-3 w-3" }) })] }, index))) })] }), _jsx("div", { className: "flex justify-end mt-4", children: _jsxs(Button, { onClick: (e) => onNext && onNext("growth"), className: "gap-2", children: ["Continue to Product & Technology", _jsx(ArrowRight, { className: "h-4 w-4" })] }) })] })] }));
}
