import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { AccordionContent, AccordionItem, AccordionTrigger, } from "@/components/ui/accordion";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Plus, X, ArrowRight } from "lucide-react";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from "@/components/ui/select";
export function ProductTechnology({ companyDetails, handleTextChange, newItem, setNewItem, addToArray, removeFromArray, onNext, }) {
    return (_jsxs(AccordionItem, { value: "product", children: [_jsx(AccordionTrigger, { className: "text-base font-medium", children: "Product & Technology" }), _jsxs(AccordionContent, { className: "space-y-4 pt-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Technology Stack" }), _jsxs("div", { className: "flex gap-2", children: [_jsx(Input, { placeholder: "Add a technology (AI, blockchain, cloud, etc.)", value: newItem.techStack || "", onChange: (e) => setNewItem(Object.assign(Object.assign({}, newItem), { techStack: e.target.value })) }), _jsx(Button, { type: "button", size: "icon", onClick: () => addToArray("techStack"), children: _jsx(Plus, { className: "h-4 w-4" }) })] }), _jsx("div", { className: "flex flex-wrap gap-2 mt-2", children: (companyDetails.techStack || []).map((tech, index) => (_jsxs("div", { className: "flex items-center bg-secondary text-secondary-foreground px-3 py-1 rounded-full text-sm", children: [tech, _jsx("button", { onClick: () => removeFromArray("techStack", index), className: "ml-2 text-muted-foreground hover:text-foreground", children: _jsx(X, { className: "h-3 w-3" }) })] }, index))) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Current Product Stage" }), _jsxs(Select, { value: companyDetails.productStage || "unknown", onValueChange: (value) => handleTextChange("productStage", value), children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, { placeholder: "Select product stage" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "unknown", children: "Unknown" }), _jsx(SelectItem, { value: "idea", children: "Idea" }), _jsx(SelectItem, { value: "mvp", children: "MVP" }), _jsx(SelectItem, { value: "beta", children: "Beta" }), _jsx(SelectItem, { value: "launched", children: "Launched" }), _jsx(SelectItem, { value: "scaling", children: "Scaling" })] })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Intellectual Property" }), _jsx(Textarea, { placeholder: "Any patents, trademarks, proprietary tech?", value: companyDetails.intellectualProperty || "", onChange: (e) => handleTextChange("intellectualProperty", e.target.value) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "R&D Pipeline" }), _jsx(Textarea, { placeholder: "Any upcoming product innovations?", value: companyDetails.rdPipeline || "", onChange: (e) => handleTextChange("rdPipeline", e.target.value) })] }), _jsx("div", { className: "flex justify-end mt-4", children: _jsxs(Button, { onClick: (e) => onNext && onNext("product"), className: "gap-2", children: ["Continue to Team & Leadership", _jsx(ArrowRight, { className: "h-4 w-4" })] }) })] })] }));
}
