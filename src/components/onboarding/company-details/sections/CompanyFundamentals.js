import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { AccordionContent, AccordionItem, AccordionTrigger, } from "@/components/ui/accordion";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Plus, X, ArrowRight } from "lucide-react";
export function CompanyFundamentals({ companyDetails, handleTextChange, newItem, setNewItem, addToArray, removeFromArray, onNext, }) {
    return (_jsxs(AccordionItem, { value: "fundamentals", children: [_jsx(AccordionTrigger, { className: "text-base font-medium", children: "Company Fundamentals" }), _jsxs(AccordionContent, { className: "space-y-4 pt-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Company Description" }), _jsx(Textarea, { placeholder: "What does your company do?", value: companyDetails.description || "", onChange: (e) => handleTextChange("description", e.target.value), className: "min-h-[100px]" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Mission Statement" }), _jsx(Textarea, { placeholder: "What is your company's mission?", value: companyDetails.mission || "", onChange: (e) => handleTextChange("mission", e.target.value) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Vision" }), _jsx(Textarea, { placeholder: "What is your long-term vision?", value: companyDetails.vision || "", onChange: (e) => handleTextChange("vision", e.target.value) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Target Market" }), _jsx(Textarea, { placeholder: "Who is your customer? (Age, geography, demographics, psychographics)", value: companyDetails.targetMarket || "", onChange: (e) => handleTextChange("targetMarket", e.target.value) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Business Type" }), _jsx("div", { className: "flex flex-col space-y-2", children: _jsxs(RadioGroup, { value: companyDetails.businessType || "B2B", onValueChange: (value) => handleTextChange("businessType", value), className: "flex space-x-4", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(RadioGroupItem, { value: "B2B", id: "b2b" }), _jsx(Label, { htmlFor: "b2b", children: "B2B" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(RadioGroupItem, { value: "B2C", id: "b2c" }), _jsx(Label, { htmlFor: "b2c", children: "B2C" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(RadioGroupItem, { value: "Both", id: "both" }), _jsx(Label, { htmlFor: "both", children: "Both" })] })] }) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Core Products / Services" }), _jsxs("div", { className: "flex gap-2", children: [_jsx(Input, { placeholder: "Add a product or service", value: newItem.coreProducts || "", onChange: (e) => setNewItem(Object.assign(Object.assign({}, newItem), { coreProducts: e.target.value })) }), _jsx(Button, { type: "button", size: "icon", onClick: () => addToArray("coreProducts"), children: _jsx(Plus, { className: "h-4 w-4" }) })] }), _jsx("div", { className: "flex flex-wrap gap-2 mt-2", children: (companyDetails.coreProducts || []).map((product, index) => (_jsxs("div", { className: "flex items-center bg-secondary text-secondary-foreground px-3 py-1 rounded-full text-sm", children: [product, _jsx("button", { onClick: () => removeFromArray("coreProducts", index), className: "ml-2 text-muted-foreground hover:text-foreground", children: _jsx(X, { className: "h-3 w-3" }) })] }, index))) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("label", { className: "text-sm font-medium", children: "Business Model" }), _jsx(Input, { placeholder: "How does your company make money? (SaaS, e-commerce, etc.)", value: companyDetails.businessModel || "", onChange: (e) => handleTextChange("businessModel", e.target.value) })] }), _jsx("div", { className: "flex justify-end mt-4", children: _jsxs(Button, { onClick: (e) => onNext && onNext("fundamentals"), className: "gap-2", children: ["Continue to Market Analysis", _jsx(ArrowRight, { className: "h-4 w-4" })] }) })] })] }));
}
