import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import AiCallScript from "@/components/calls/AiCallScript";
import { Play, Download, FileText, MessageSquare } from "lucide-react";
import { Button } from "@/components/ui/button";
import { useState } from "react";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, } from "@/components/ui/dialog";
export default function ScriptSection({ title, scripts, onUseScript, type, isAiSection = false, }) {
    const filteredScripts = isAiSection
        ? scripts.filter((script) => script.aiGenerated)
        : scripts.filter((script) => !script.aiGenerated);
    const [viewScriptId, setViewScriptId] = useState(null);
    const [scriptDialogOpen, setScriptDialogOpen] = useState(false);
    const handleViewScript = (scriptId) => {
        setViewScriptId(scriptId);
        setScriptDialogOpen(true);
    };
    const currentScript = viewScriptId
        ? filteredScripts.find((script) => script.id === viewScriptId)
        : null;
    return (_jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-xl font-semibold mb-4", children: title }), _jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: isAiSection
                    ? // AI Generated scripts
                        filteredScripts.map((script) => (_jsx(AiCallScript, { id: script.id, title: script.title, target: script.target, duration: script.duration, primaryBot: script.primaryBot, collaborators: script.collaborators, content: script.content, onUse: onUseScript, type: type }, script.id)))
                    : // Standard scripts
                        filteredScripts.map((script) => (_jsxs("div", { className: "dashboard-card", children: [_jsx("h3", { className: "text-xl font-bold mb-4", children: script.title }), _jsxs("div", { className: "space-y-2 mb-6", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-gray-400", children: "Target:" }), _jsx("span", { children: script.target })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-gray-400", children: "Duration:" }), _jsx("span", { children: script.duration })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-gray-400", children: "Status:" }), _jsx("span", { className: script.status === "Ready"
                                                        ? "text-green-400"
                                                        : "text-amber-400", children: script.status })] })] }), _jsx("div", { className: "flex space-x-2", children: script.status === "Ready" ? (_jsxs(_Fragment, { children: [_jsxs(Button, { variant: "outline", size: "sm", className: "flex-1", onClick: () => onUseScript(script.id, script.title), children: [type === "call" ? (_jsx(Play, { className: "mr-2 h-4 w-4" })) : (_jsx(MessageSquare, { className: "mr-2 h-4 w-4" })), "Use"] }), _jsxs(Button, { variant: "outline", size: "sm", className: "flex-1", onClick: () => handleViewScript(script.id), children: [_jsx(FileText, { className: "mr-2 h-4 w-4" }), "View ", type === "call" ? "Script" : "Template"] })] })) : (_jsx(Button, { disabled: true, variant: "outline", size: "sm", className: "w-full", children: "Coming Soon" })) }), _jsx("div", { className: "flex justify-end mt-2", children: _jsxs(Button, { variant: "ghost", size: "sm", children: [_jsx(Download, { className: "mr-2 h-4 w-4" }), "Download"] }) })] }, script.id))) }), _jsx(Dialog, { open: scriptDialogOpen, onOpenChange: setScriptDialogOpen, children: _jsx(DialogContent, { className: "max-w-3xl max-h-[80vh] overflow-y-auto", children: currentScript && (_jsxs(_Fragment, { children: [_jsxs(DialogHeader, { children: [_jsx(DialogTitle, { children: currentScript.title }), _jsx(DialogDescription, { children: type === "call" ? "Call Script" : "Message Template" })] }), _jsxs("div", { className: "mt-4 space-y-4", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Target:" }), _jsx("span", { className: "font-medium", children: currentScript.target })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Duration:" }), _jsx("span", { className: "font-medium", children: currentScript.duration })] }), _jsxs("div", { className: "border-t pt-4 mt-4", children: [_jsx("h3", { className: "text-lg font-medium mb-2", children: type === "call" ? "Script Content" : "Template Content" }), _jsx("div", { className: "bg-muted/30 rounded-md p-4 whitespace-pre-line", children: currentScript.content ||
                                                    (type === "call"
                                                        ? `# ${currentScript.title}\n\n## Introduction\n- Greet the prospect warmly and introduce yourself and your company\n- Briefly explain the purpose of your call\n\n## Value Proposition\n- Present your main value proposition tailored to ${currentScript.target}\n- Highlight 2-3 key benefits\n\n## Questions to Ask\n- What challenges are they currently facing?\n- How are they currently solving these problems?\n- What would an ideal solution look like for them?\n\n## Addressing Objections\n- Price: Focus on ROI and long-term value\n- Timing: Emphasize opportunity cost of delay\n- Need to consult others: Offer to schedule a follow-up with all stakeholders\n\n## Call to Action\n- Schedule a demo/follow-up meeting\n- Send additional information\n- Confirm next steps\n\n## Closing\n- Thank them for their time\n- Restate any commitments made\n- Provide your contact information`
                                                        : `# ${currentScript.title}\n\nHi [Name],\n\nI hope this message finds you well. I'm reaching out regarding our business platform that has been helping companies like yours achieve significant growth.\n\n## Key Points\n- Our platform provides personalized strategic advice for businesses in your industry\n- We've analyzed market trends and created recommendations specifically for companies like yours\n- Clients implementing our strategies have seen an average 20% improvement in key metrics\n\n## Next Steps\nI'd love to schedule a brief call to discuss how our solution could specifically benefit your business. Would you be available for a 15-minute conversation this week?\n\nBest regards,\n[Your Name]\n[Your Contact Information]`) })] })] })] })) }) })] }));
}
