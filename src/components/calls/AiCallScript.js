import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import React, { useState } from "react";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Button } from "@/components/ui/button";
import { Download, Play, FileText, MessageSquare } from "lucide-react";
import { Badge } from "@/components/ui/badge";
import { useCallScriptTracking } from "@/hooks/useCallScriptTracking";
import AiCallScriptFeedback from "./AiCallScriptFeedback";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, } from "@/components/ui/dialog";
export default function AiCallScript({ id, title, target, duration, primaryBot, collaborators = [], content, onUse, type, }) {
    const { trackScriptUse, trackScriptView } = useCallScriptTracking();
    const [scriptDialogOpen, setScriptDialogOpen] = useState(false);
    const handleUse = () => {
        trackScriptUse(id, title, type, primaryBot);
        onUse(id, title);
    };
    const handleViewScript = () => {
        trackScriptView(id, title, type);
        setScriptDialogOpen(true);
    };
    // Track view when component renders
    React.useEffect(() => {
        trackScriptView(id, title, type);
    }, [id, title, type, trackScriptView]);
    return (_jsxs(_Fragment, { children: [_jsxs("div", { className: "border rounded-lg p-4 bg-card h-full flex flex-col", children: [_jsxs("div", { className: "flex gap-3 items-start mb-3", children: [_jsxs(Avatar, { className: "h-10 w-10 border border-primary/20", children: [_jsx(AvatarImage, { src: `/avatars/${primaryBot.name.toLowerCase().replace(/\s+/g, "-")}.png`, alt: primaryBot.name }), _jsx(AvatarFallback, { children: primaryBot.name.charAt(0) })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-semibold mb-1 pr-6", children: title }), _jsx(Badge, { variant: "outline", className: "bg-primary/5", children: type === "call" ? "Call Script" : "Message Template" })] })] }), _jsxs("div", { className: "space-y-2 mb-4 text-sm flex-grow", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-muted-foreground", children: "Created by:" }), _jsx("span", { className: "font-medium", children: primaryBot.name })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-muted-foreground", children: "Target:" }), _jsx("span", { children: target })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-muted-foreground", children: "Duration:" }), _jsx("span", { children: duration })] }), collaborators.length > 0 && (_jsxs("div", { children: [_jsx("span", { className: "text-muted-foreground block mb-1", children: "Collaborated with:" }), _jsx("div", { className: "flex flex-wrap gap-1 mt-1", children: collaborators.map((bot, index) => (_jsx(Badge, { variant: "secondary", className: "text-xs", children: bot.name }, index))) })] }))] }), _jsxs("div", { className: "flex space-x-2 mt-auto", children: [_jsxs(Button, { variant: "default", size: "sm", className: "flex-1", onClick: handleUse, children: [type === "call" ? (_jsx(Play, { className: "mr-2 h-4 w-4" })) : (_jsx(MessageSquare, { className: "mr-2 h-4 w-4" })), "Use"] }), _jsxs(Button, { variant: "outline", size: "sm", className: "flex-1", onClick: handleViewScript, children: [_jsx(FileText, { className: "mr-2 h-4 w-4" }), "View ", type === "call" ? "Script" : "Template"] })] }), _jsx("div", { className: "flex justify-end mt-2", children: _jsxs(Button, { variant: "ghost", size: "sm", children: [_jsx(Download, { className: "mr-2 h-4 w-4" }), "Download"] }) }), _jsx(AiCallScriptFeedback, { id: id, title: title, type: type, primaryBot: primaryBot })] }), _jsx(Dialog, { open: scriptDialogOpen, onOpenChange: setScriptDialogOpen, children: _jsxs(DialogContent, { className: "max-w-3xl max-h-[80vh] overflow-y-auto", children: [_jsxs(DialogHeader, { children: [_jsx(DialogTitle, { children: title }), _jsxs(DialogDescription, { children: [type === "call" ? "Call Script" : "Message Template", " created by", " ", primaryBot.name] })] }), _jsxs("div", { className: "mt-4 space-y-4", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Target:" }), _jsx("span", { className: "font-medium", children: target })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-muted-foreground", children: "Duration:" }), _jsx("span", { className: "font-medium", children: duration })] }), _jsxs("div", { className: "border-t pt-4 mt-4", children: [_jsx("h3", { className: "text-lg font-medium mb-2", children: type === "call" ? "Script Content" : "Template Content" }), _jsx("div", { className: "bg-muted/30 rounded-md p-4 whitespace-pre-line", children: content ||
                                                (type === "call"
                                                    ? `# ${title}\n\n## Introduction\n- Greet the prospect warmly and introduce yourself and ${primaryBot.name}'s company\n- Briefly explain the purpose of your call\n\n## Value Proposition\n- Present your main value proposition tailored to ${target}\n- Highlight 2-3 key benefits\n\n## Questions to Ask\n- What challenges are they currently facing?\n- How are they currently solving these problems?\n- What would an ideal solution look like for them?\n\n## Addressing Objections\n- Price: Focus on ROI and long-term value\n- Timing: Emphasize opportunity cost of delay\n- Need to consult others: Offer to schedule a follow-up with all stakeholders\n\n## Call to Action\n- Schedule a demo/follow-up meeting\n- Send additional information\n- Confirm next steps\n\n## Closing\n- Thank them for their time\n- Restate any commitments made\n- Provide your contact information`
                                                    : `# ${title}\n\nHi [Name],\n\nI hope this message finds you well. I'm reaching out regarding our AI-powered business strategy platform that has been helping companies like yours achieve significant growth.\n\n## Key Points\n- Our platform provides personalized strategic advice for businesses in your industry\n- ${primaryBot.name} has analyzed market trends and created recommendations specifically for companies like yours\n- Clients implementing our strategies have seen an average 25% improvement in key metrics\n\n## Next Steps\nI'd love to schedule a brief call to discuss how our solution could specifically benefit your business. Would you be available for a 15-minute conversation this week?\n\nAlternatively, I can send you some additional information about our platform if you'd prefer to review it at your convenience.\n\nBest regards,\n[Your Name]\n[Your Contact Information]`) })] })] })] }) })] }));
}
