import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { CheckCircle2, AlertCircle, Loader2, ShieldAlert, Trash2, } from "lucide-react";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow, } from "@/components/ui/table";
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger, } from "@/components/ui/accordion";
export function ProductionDataStatus({ validationResults, isValidating, onValidate, }) {
    if (isValidating) {
        return (_jsxs(Card, { className: "mb-6", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(Loader2, { className: "h-4 w-4 mr-2 animate-spin" }), "Running Production Data Validation"] }) }), _jsxs(CardContent, { children: [_jsx("p", { className: "text-sm text-muted-foreground mb-2", children: "Scanning database for test data and potential production issues..." }), _jsx("div", { className: "h-2 w-full bg-muted overflow-hidden rounded-full", children: _jsx("div", { className: "h-full bg-primary animate-pulse rounded-full", style: { width: "60%" } }) })] })] }));
    }
    if (!validationResults) {
        return (_jsxs(Card, { children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-lg flex items-center", children: [_jsx(ShieldAlert, { className: "h-4 w-4 mr-2" }), "Production Data Status"] }) }), _jsxs(CardContent, { children: [_jsx("p", { className: "text-sm text-muted-foreground mb-4", children: "Validate your production data to ensure no test or demo data is present in your database." }), _jsx(Button, { onClick: onValidate, disabled: isValidating, children: "Run Validation" })] })] }));
    }
    // Production data has been validated
    return (_jsxs(Card, { className: validationResults.success
            ? "border-green-200 bg-green-50/50 dark:bg-green-900/10"
            : "border-amber-200 bg-amber-50/50 dark:bg-amber-900/10", children: [_jsx(CardHeader, { className: "pb-2", children: _jsxs(CardTitle, { className: "text-lg flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center", children: [validationResults.success ? (_jsx(CheckCircle2, { className: "h-4 w-4 mr-2 text-green-500" })) : (_jsx(AlertCircle, { className: "h-4 w-4 mr-2 text-amber-500" })), "Production Data Status"] }), _jsx(Badge, { variant: validationResults.success ? "outline" : "outline", className: validationResults.success
                                ? "bg-green-100 text-green-700 border-green-200"
                                : "bg-amber-100 text-amber-700 border-amber-200", children: validationResults.success
                                ? "Ready for Production"
                                : "Issues Found" })] }) }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-2", children: [_jsxs("div", { className: "bg-background rounded-md p-2 border", children: [_jsx("div", { className: "text-xs text-muted-foreground", children: "Valid Records" }), _jsx("div", { className: "text-lg font-semibold", children: validationResults.validRecords })] }), _jsxs("div", { className: "bg-background rounded-md p-2 border", children: [_jsx("div", { className: "text-xs text-muted-foreground", children: "Errors" }), _jsx("div", { className: "text-lg font-semibold", children: validationResults.errors.length })] }), _jsxs("div", { className: "bg-background rounded-md p-2 border", children: [_jsx("div", { className: "text-xs text-muted-foreground", children: "Warnings" }), _jsx("div", { className: "text-lg font-semibold", children: validationResults.warnings.length })] }), _jsxs("div", { className: "bg-background rounded-md p-2 border", children: [_jsx("div", { className: "text-xs text-muted-foreground", children: "Cleaned Items" }), _jsx("div", { className: "text-lg font-semibold flex items-center", children: validationResults.cleanupPerformed ? (_jsxs(_Fragment, { children: [_jsx(Trash2, { className: "h-3 w-3 mr-1 text-amber-500" }), validationResults.validationDetails.companies.cleaned +
                                                        validationResults.validationDetails.leads.cleaned +
                                                        validationResults.validationDetails.strategies.cleaned +
                                                        validationResults.validationDetails.campaigns.cleaned] })) : ("0") })] })] }), _jsxs(Table, { className: "bg-background border rounded-md text-xs", children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { children: "Table" }), _jsx(TableHead, { className: "text-right", children: "Total" }), _jsx(TableHead, { className: "text-right", children: "Valid" }), _jsx(TableHead, { className: "text-right", children: "Cleaned" })] }) }), _jsxs(TableBody, { children: [_jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: "Companies" }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.companies.total }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.companies.valid }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.companies.cleaned })] }), _jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: "Leads" }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.leads.total }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.leads.valid }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.leads.cleaned })] }), _jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: "Strategies" }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.strategies.total }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.strategies.valid }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.strategies.cleaned })] }), _jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: "Campaigns" }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.campaigns.total }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.campaigns.valid }), _jsx(TableCell, { className: "text-right", children: validationResults.validationDetails.campaigns.cleaned })] })] })] }), (validationResults.errors.length > 0 ||
                            validationResults.warnings.length > 0) && (_jsxs(Accordion, { type: "single", collapsible: true, className: "w-full", children: [validationResults.errors.length > 0 && (_jsxs(AccordionItem, { value: "errors", children: [_jsxs(AccordionTrigger, { className: "text-sm text-red-600", children: [validationResults.errors.length, " Errors"] }), _jsx(AccordionContent, { children: _jsx("ul", { className: "text-xs space-y-1 mt-2 max-h-40 overflow-y-auto", children: validationResults.errors.map((error, index) => (_jsxs("li", { className: "text-red-600 bg-red-50 p-1 rounded flex items-start", children: [_jsx(AlertCircle, { className: "h-3 w-3 mr-1 mt-0.5 flex-shrink-0" }), _jsxs("div", { children: [_jsxs("span", { className: "font-semibold", children: [error.table, ":"] }), " ", error.message, error.recordId && (_jsxs("div", { className: "text-xs text-red-500", children: ["ID: ", error.recordId] }))] })] }, index))) }) })] })), validationResults.warnings.length > 0 && (_jsxs(AccordionItem, { value: "warnings", children: [_jsxs(AccordionTrigger, { className: "text-sm text-amber-600", children: [validationResults.warnings.length, " Warnings"] }), _jsx(AccordionContent, { children: _jsx("ul", { className: "text-xs space-y-1 mt-2 max-h-40 overflow-y-auto", children: validationResults.warnings.map((warning, index) => (_jsxs("li", { className: "text-amber-600 bg-amber-50 p-1 rounded flex items-start", children: [_jsx(Trash2, { className: "h-3 w-3 mr-1 mt-0.5 flex-shrink-0" }), _jsxs("div", { children: [_jsxs("span", { className: "font-semibold", children: [warning.table, ":"] }), " ", warning.message, warning.recordId && (_jsxs("div", { className: "text-xs text-amber-500", children: ["ID: ", warning.recordId] }))] })] }, index))) }) })] }))] })), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "text-xs text-muted-foreground", children: ["Last validated:", " ", new Date(validationResults.timestamp).toLocaleString()] }), _jsx(Button, { onClick: onValidate, disabled: isValidating, variant: "outline", size: "sm", children: "Run Again" })] })] }) })] }));
}
