import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from "@/components/ui/select";
import { Slider } from "@/components/ui/slider";
export function AiBehaviorSettings() {
    const [creativeThinking, setCreativeThinking] = useState(70);
    const [riskTolerance, setRiskTolerance] = useState(50);
    const [autonomyLevel, setAutonomyLevel] = useState(60);
    const [proactiveAssistance, setProactiveAssistance] = useState(true);
    const [executiveModel, setExecutiveModel] = useState("balanced");
    const [decisionSpeed, setDecisionSpeed] = useState("normal");
    return (_jsx("div", { className: "space-y-6", children: _jsx(Card, { children: _jsx(CardContent, { className: "pt-6", children: _jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "executive-model", children: "Executive AI Model" }), _jsxs(Select, { value: executiveModel, onValueChange: setExecutiveModel, children: [_jsx(SelectTrigger, { id: "executive-model", children: _jsx(SelectValue, { placeholder: "Select model" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "cautious", children: "Cautious" }), _jsx(SelectItem, { value: "balanced", children: "Balanced" }), _jsx(SelectItem, { value: "aggressive", children: "Growth-focused" }), _jsx(SelectItem, { value: "innovative", children: "Innovative" })] })] }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Determines overall approach to business decisions" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "decision-speed", children: "Decision Speed" }), _jsxs(Select, { value: decisionSpeed, onValueChange: setDecisionSpeed, children: [_jsx(SelectTrigger, { id: "decision-speed", children: _jsx(SelectValue, { placeholder: "Select speed" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "deliberate", children: "Deliberate" }), _jsx(SelectItem, { value: "normal", children: "Normal" }), _jsx(SelectItem, { value: "fast", children: "Fast" }), _jsx(SelectItem, { value: "immediate", children: "Immediate" })] })] }), _jsx("p", { className: "text-sm text-muted-foreground", children: "How quickly the AI executive team makes decisions" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx(Label, { htmlFor: "creative-thinking", children: "Creative Thinking" }), _jsxs("span", { className: "text-sm text-muted-foreground", children: [creativeThinking, "%"] })] }), _jsx(Slider, { id: "creative-thinking", min: 0, max: 100, step: 10, value: [creativeThinking], onValueChange: (values) => setCreativeThinking(values[0]) }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Higher values prioritize novel and innovative solutions" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx(Label, { htmlFor: "risk-tolerance", children: "Risk Tolerance" }), _jsxs("span", { className: "text-sm text-muted-foreground", children: [riskTolerance, "%"] })] }), _jsx(Slider, { id: "risk-tolerance", min: 0, max: 100, step: 10, value: [riskTolerance], onValueChange: (values) => setRiskTolerance(values[0]) }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Higher values mean more aggressive strategies" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx(Label, { htmlFor: "autonomy-level", children: "Autonomy Level" }), _jsxs("span", { className: "text-sm text-muted-foreground", children: [autonomyLevel, "%"] })] }), _jsx(Slider, { id: "autonomy-level", min: 0, max: 100, step: 10, value: [autonomyLevel], onValueChange: (values) => setAutonomyLevel(values[0]) }), _jsx("p", { className: "text-sm text-muted-foreground", children: "How independently the AI can make decisions without confirmation" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "proactive", className: "mb-1 block", children: "Proactive Assistance" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Allow AI to suggest actions without being asked" })] }), _jsx(Switch, { id: "proactive", checked: proactiveAssistance, onCheckedChange: setProactiveAssistance })] })] }) }) }) }));
}
