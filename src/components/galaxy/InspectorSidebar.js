import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useNavigate } from "react-router-dom";
import { Panel } from "@/components/ui/GlassPanel";
export const InspectorSidebar = ({ data, onClose, onNodeHover }) => {
    var _a, _b;
    const navigate = useNavigate();
    if (!data) {
        return (_jsx("div", { className: "w-full h-full p-4 bg-black/80 text-white overflow-y-auto", children: _jsxs("div", { className: "animate-pulse", children: [_jsx("div", { className: "h-6 bg-gray-700 rounded mb-4" }), _jsx("div", { className: "h-4 bg-gray-700 rounded mb-2" }), _jsx("div", { className: "h-4 bg-gray-700 rounded mb-2" })] }) }));
    }
    return (_jsx("aside", { className: "fixed right-0 top-0 w-[400px] h-full bg-card border-l border-border z-50 shadow-xl", children: _jsxs(Panel, { className: "p-6 h-full overflow-y-auto", children: [_jsxs("div", { className: "flex justify-between items-center mb-4", children: [_jsx("h2", { className: "text-xl font-semibold", children: data.name || "Inspector" }), _jsx("button", { onClick: onClose, className: "text-muted hover:text-white", children: "\u2715" })] }), _jsx("h2", { className: "text-lg font-semibold", children: data.name }), _jsx("p", { className: "text-sm text-muted mt-1", children: data.description }), _jsxs("div", { className: "mt-4", children: [_jsx("h3", { className: "text-sm uppercase tracking-wide text-muted", children: "Linked Strategies" }), _jsx("ul", { className: "mt-2 space-y-1", children: (_a = data.strategies) === null || _a === void 0 ? void 0 : _a.map((strategy) => (_jsxs("li", { onClick: () => navigate(`/strategy/${strategy.id}`), onMouseEnter: () => onNodeHover(strategy), onMouseLeave: () => onNodeHover(null), className: "cursor-pointer hover:text-primary transition", children: ["\u21B3 ", strategy.title] }, strategy.id))) })] }), _jsxs("div", { className: "mt-4", children: [_jsx("h3", { className: "text-sm uppercase tracking-wide text-muted", children: "Linked Plugins" }), _jsx("ul", { className: "mt-2 space-y-1", children: (_b = data.plugins) === null || _b === void 0 ? void 0 : _b.map((plugin) => (_jsxs("li", { onClick: () => navigate(`/plugin/${plugin.id}`), onMouseEnter: () => onNodeHover(plugin), onMouseLeave: () => onNodeHover(null), className: "cursor-pointer hover:text-primary transition", children: ["\u21B3 ", plugin.title] }, plugin.id))) })] })] }) }));
};
