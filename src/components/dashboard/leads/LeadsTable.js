import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ChevronDown, ChevronUp, MoreHorizontal } from "lucide-react";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow, } from "@/components/ui/table";
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger, } from "@/components/ui/dropdown-menu";
import { LeadStatusBadge } from "@/components/admin/leads/LeadStatusBadge";
import { LeadScoreBadge } from "./LeadScoreBadge";
export const LeadsTable = ({ leads, sortBy, sortOrder, onSort, onViewLead, onStatusUpdate, onDelete, selectedLeads, onLeadSelect, onSelectAll, getLeadScore, getNextBestAction, }) => {
    const sortIcon = sortOrder === "asc" ? (_jsx(ChevronUp, { className: "ml-2 h-4 w-4" })) : (_jsx(ChevronDown, { className: "ml-2 h-4 w-4" }));
    const allLeadsSelected = leads.length > 0 && selectedLeads.length === leads.length;
    return (_jsx("div", { className: "rounded-md border", children: _jsxs(Table, { children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { className: "w-12", children: _jsx(Checkbox, { checked: allLeadsSelected, onCheckedChange: onSelectAll, "aria-label": "Select all leads" }) }), _jsx(TableHead, { className: "cursor-pointer", onClick: () => onSort("name"), children: _jsxs("div", { className: "flex items-center", children: ["Name ", sortBy === "name" && sortIcon] }) }), _jsx(TableHead, { children: "Contact" }), _jsx(TableHead, { children: "Status" }), _jsx(TableHead, { children: "Score" }), _jsx(TableHead, { children: "Next Action" }), _jsx(TableHead, { className: "cursor-pointer", onClick: () => onSort("created_at"), children: _jsxs("div", { className: "flex items-center", children: ["Date Added ", sortBy === "created_at" && sortIcon] }) }), _jsx(TableHead, { className: "w-12", children: "Actions" })] }) }), _jsx(TableBody, { children: leads.map((lead) => {
                        const leadScore = getLeadScore(lead);
                        const nextAction = getNextBestAction(lead);
                        return (_jsxs(TableRow, { children: [_jsx(TableCell, { children: _jsx(Checkbox, { checked: selectedLeads.includes(lead.id), onCheckedChange: (checked) => onLeadSelect(lead.id, !!checked), "aria-label": `Select ${lead.name}` }) }), _jsx(TableCell, { className: "font-medium hover:underline cursor-pointer", onClick: () => onViewLead(lead), children: lead.name }), _jsxs(TableCell, { children: [lead.email && _jsx("div", { children: lead.email }), lead.phone && _jsx("div", { children: lead.phone })] }), _jsx(TableCell, { children: _jsx(LeadStatusBadge, { status: lead.status }) }), _jsx(TableCell, { children: _jsx(LeadScoreBadge, { score: leadScore }) }), _jsx(TableCell, { className: "max-w-xs truncate", title: nextAction, children: nextAction }), _jsx(TableCell, { children: new Date(lead.created_at).toLocaleDateString() }), _jsx(TableCell, { children: _jsxs(DropdownMenu, { children: [_jsx(DropdownMenuTrigger, { asChild: true, children: _jsxs(Button, { variant: "ghost", className: "h-8 w-8 p-0", children: [_jsx("span", { className: "sr-only", children: "Open menu" }), _jsx(MoreHorizontal, { className: "h-4 w-4" })] }) }), _jsxs(DropdownMenuContent, { align: "end", children: [_jsx(DropdownMenuItem, { onClick: () => onViewLead(lead), children: "View Details" }), _jsx(DropdownMenuItem, { onClick: () => onStatusUpdate(lead.id, "contacted"), children: "Mark as Contacted" }), _jsx(DropdownMenuItem, { onClick: () => onStatusUpdate(lead.id, "qualified"), children: "Mark as Qualified" }), _jsx(DropdownMenuItem, { onClick: () => onDelete(lead.id), className: "text-destructive", children: "Delete" })] })] }) })] }, lead.id));
                    }) })] }) }));
};
