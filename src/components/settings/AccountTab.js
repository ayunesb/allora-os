import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle, } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { useAuth } from "@/context/AuthContext";
import { User, KeyRound } from "lucide-react";
export default function AccountTab() {
    const { user } = useAuth();
    return (_jsxs("div", { className: "grid gap-6", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(User, { className: "h-5 w-5" }), "Profile Settings"] }), _jsx(CardDescription, { children: "Manage your personal information and preferences" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "name", children: "Name" }), _jsx(Input, { id: "name", placeholder: "Your name" })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "email", children: "Email" }), _jsx(Input, { id: "email", value: (user === null || user === void 0 ? void 0 : user.email) || "", disabled: true }), _jsx("p", { className: "text-xs text-muted-foreground", children: "Your account email cannot be changed" })] })] }), _jsx(CardFooter, { className: "justify-end", children: _jsx(Button, { children: "Save Changes" }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(KeyRound, { className: "h-5 w-5" }), "Password"] }), _jsx(CardDescription, { children: "Update your password" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "current-password", children: "Current Password" }), _jsx(Input, { id: "current-password", type: "password" })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "new-password", children: "New Password" }), _jsx(Input, { id: "new-password", type: "password" })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "confirm-password", children: "Confirm New Password" }), _jsx(Input, { id: "confirm-password", type: "password" })] })] }), _jsx(CardFooter, { className: "justify-end", children: _jsx(Button, { children: "Update Password" }) })] })] }));
}
