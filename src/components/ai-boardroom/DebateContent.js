import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Button } from "@/components/ui/button";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { PlusCircle } from "lucide-react";
import { getExecutiveImage } from "@/utils/ai-executives";
export const DebateContent = ({ topic, summary, discussion, conclusion, onStartNewDebate, }) => {
    return (_jsxs(Card, { className: "shadow-md", children: [_jsxs(CardHeader, { className: "pb-2", children: [_jsx(CardTitle, { className: "text-lg", children: "AI Executive Boardroom" }), _jsx(CardDescription, { children: "A simulated debate among your AI executives on key business strategies" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx("h3", { className: "text-md font-semibold", children: "Topic of Discussion" }), _jsx("p", { className: "text-muted-foreground", children: topic })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("h3", { className: "text-md font-semibold", children: "Summary" }), _jsx("p", { className: "text-muted-foreground", children: summary })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-md font-semibold", children: "Executive Perspectives" }), _jsxs(Tabs, { defaultValue: "discussion", className: "space-y-4", children: [_jsxs(TabsList, { children: [_jsx(TabsTrigger, { value: "discussion", children: "Discussion" }), _jsx(TabsTrigger, { value: "conclusion", children: "Conclusion" })] }), _jsx(TabsContent, { value: "discussion", className: "space-y-4", children: discussion.length > 0 ? (discussion.map((item, index) => {
                                            var _a;
                                            return (_jsxs("div", { className: "flex space-x-4", children: [_jsxs(Avatar, { className: "h-8 w-8", children: [_jsx(AvatarImage, { src: getExecutiveImage(item.speaker) }), _jsx(AvatarFallback, { children: ((_a = item.speaker) === null || _a === void 0 ? void 0 : _a.substring(0, 2)) || "EX" })] }), _jsxs("div", { className: "space-y-1", children: [_jsx("p", { className: "text-sm font-medium", children: item.speaker }), _jsx("p", { className: "text-xs text-muted-foreground", children: item.message })] })] }, index));
                                        })) : (_jsx("p", { className: "text-sm text-muted-foreground", children: "No discussion data available." })) }), _jsx(TabsContent, { value: "conclusion", children: conclusion ? (_jsx("p", { className: "text-muted-foreground", children: conclusion })) : (_jsx("p", { className: "text-sm text-muted-foreground", children: "No conclusion data available." })) })] })] }), _jsx("div", { className: "mt-4 pt-4 border-t border-border", children: _jsxs(Button, { onClick: onStartNewDebate, className: "w-full", children: [_jsx(PlusCircle, { className: "mr-2 h-4 w-4" }), "Start New Debate"] }) })] })] }));
};
