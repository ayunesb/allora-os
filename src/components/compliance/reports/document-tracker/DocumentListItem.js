import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Button } from "@/components/ui/button";
import { AlertCircle, Clock, Download, CheckCircle2 } from "lucide-react";
import DocumentStatusBadge from "./DocumentStatusBadge";
export default function DocumentListItem({ id, name, currentVersion, lastUpdated, status, nextUpdateDue, autoUpdatesEnabled, onUpdate, onToggleAutoUpdate, }) {
    return (_jsx("div", { className: `p-4 border rounded-lg transition-colors ${status === "outdated"
            ? "border-red-300 bg-red-50/10"
            : status === "update-available"
                ? "border-amber-300 bg-amber-50/10"
                : "border-gray-200"}`, children: _jsxs("div", { className: "flex flex-col md:flex-row md:items-center justify-between gap-4", children: [_jsxs("div", { children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("h4", { className: "font-medium", children: name }), _jsx(DocumentStatusBadge, { status: status })] }), _jsxs("div", { className: "flex flex-col text-sm text-muted-foreground mt-1 gap-1", children: [_jsxs("div", { className: "flex items-center", children: [_jsx("span", { className: "inline-block w-24", children: "Version:" }), currentVersion] }), _jsxs("div", { className: "flex items-center", children: [_jsx("span", { className: "inline-block w-24", children: "Last updated:" }), _jsx(Clock, { className: "h-3 w-3 mr-1" }), lastUpdated] }), nextUpdateDue && (_jsxs("div", { className: "flex items-center", children: [_jsx("span", { className: "inline-block w-24", children: "Next review:" }), nextUpdateDue] }))] })] }), _jsxs("div", { className: "flex flex-wrap gap-2 ml-auto", children: [status === "update-available" && (_jsx(Button, { size: "sm", onClick: () => onUpdate(id), className: "bg-amber-500 hover:bg-amber-600", children: "Update Now" })), _jsx(Button, { variant: "outline", size: "sm", onClick: () => onToggleAutoUpdate(id), children: autoUpdatesEnabled ? (_jsxs(_Fragment, { children: [_jsx(CheckCircle2, { className: "h-4 w-4 mr-1 text-green-500" }), "Auto-updates On"] })) : (_jsxs(_Fragment, { children: [_jsx(AlertCircle, { className: "h-4 w-4 mr-1 text-amber-500" }), "Auto-updates Off"] })) }), _jsx(Button, { variant: "ghost", size: "sm", children: _jsx(Download, { className: "h-4 w-4" }) })] })] }) }));
}
